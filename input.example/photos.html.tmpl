<%inherit file="_master.tmpl" />
<%! import os, string, makofw %>
<% photos = [x[:-5] for x in os.listdir(self.photosDir()) if x.endswith('.jpeg')  and  '_THUMB' not in x] %>

<div id=textStuff>
%if self.URL()=='/photos.html.tmpl':
<%
  # Generate the individual photo pages.
  photo_pages_dir = os.path.join(self.FS_ROOT(), 'photos')
  if not os.path.exists(photo_pages_dir): os.mkdir(photo_pages_dir)
  for i,photo in enumerate(photos):
      prev_photo_i = i-1
      next_photo_i = i+1 if i<len(photos)-1 else 0

      page_tmpl = string.Template('''## DEP: ${this_photo_absPath}\n''' +
# I intentionally split the string up and introduce a triple-quote before the 'inherit' line so that the mako_render.py parser doesn't think it's actually a dependency of this 'photos.html.tmpl' file.
'''<%inherit file="../_photoPage.tmpl" />
<%def name='THIS_PHOTO()'><% return "${this_photo}" %></%def>
<%def name='PREV_PHOTO()'><% return "${prev_photo}" %></%def>
<%def name='NEXT_PHOTO()'><% return "${next_photo}" %></%def>
## This file was auto-generated by photos.html.tmpl.  Any edits to this file will get overwritten.
''').substitute(dict(this_photo=photo,
                     prev_photo=photos[prev_photo_i],
                     next_photo=photos[next_photo_i]),
                     this_photo_absPath=os.path.join(self.photosDir(), photo)+'.jpeg')

      photo_page_path = os.path.join(photo_pages_dir, '%s.html.tmpl'%(photo,))
      if os.path.exists(photo_page_path):
          if open(photo_page_path).read() == page_tmpl:
              # No need to overwrite because the data is the same.
              continue
      open(photo_page_path, 'w').write(page_tmpl)
%>
<%block filter="makofw.markdown">
This is a MakoFW-Powered Photo Album.
=====================================

First, let me just say, this is *not* a very good photo album app.  Its only purpose is to be a small example of how to use MakoFW, so please don't judge it too harshly.  There are many better photo albums out there, such as [phpAlbum](http://www.phpalbum.net/).

This photo album scans a directory for JPEG files, and creates a thumbnail and HTML page for each image.  Additionally, `.meta` files are used to provide image information, such as `description` and `location`.
</%block>
%else:
${next.body()}
%endif
</div>

<ul class=thumbnails>
%for p in photos:
  <li class=thumbnail><a href="${self.URL('/photos/%s.html'%(p,), mtime=None)}"><img src="${self.URL(makofw.thumb(self.FS_ROOT(), '/static/photoalbum/%s.jpeg'%(p,), width=162, height=100))}"></a></li>
%endfor
</ul>
<div class=clearFloats></div>

<%block name='PAGE_CSS'>
  <link rel="stylesheet" type="text/css" href="${self.URL('/static/css/photos.css')}">
</%block>
<%def name="photosDir()"><% return os.path.join(self.FS_ROOT(), 'static', 'photoalbum') %></%def>

