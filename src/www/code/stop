#!/bin/bash
# Written by Christopher Sebastian, 2011-12-14
###########################################################
# set -o errexit   # Abort script if there is an error    #
# set -o nounset   # Using an un-set variable is an error #
# set -x           # Trace                                #
if [ "$(id -u)" != "0" ]; then                            #
    echo 'You should be root to run this.' ; exit 1       #
fi                                                        #
MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" #
RUNNING_FILE="${MYDIR}000_RUNNING"                        #
IS_RUNNING=0                                              #
if [ -f "$RUNNING_FILE" ]; then IS_RUNNING=1 ; fi         #
export CHROOT_DIR="$MYDIR/ROOT"                           #
if [ ! -d "$CHROOT_DIR" ]; then                           #
    echo "Error: CHROOT_DIR does not exist: $CHROOT_DIR"  #
    exit 1;                                               #
fi                                                        #
###########################################################


ANY_ERRORS=0

"$MYDIR/run" /nomake/halt.sh
result=$?
if [ "$result" != 0 ]; then
    echo 'Error in halt.sh.'
    ANY_ERRORS=1
fi

"$MYDIR/umount_host"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi

"$MYDIR/recursive_mount" umount "$CHROOT_DIR/tmp"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi
"$MYDIR/recursive_mount" umount "$CHROOT_DIR/sys"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi
"$MYDIR/recursive_mount" umount "$CHROOT_DIR/proc"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi
"$MYDIR/recursive_mount" umount "$CHROOT_DIR/dev"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi


# In case the user mounted anything extra:
"$MYDIR/recursive_mount" umount "$CHROOT_DIR"
result=$?; if [ "$result" != 0 ]; then ANY_ERRORS=1; fi

if [ "$ANY_ERRORS" = 0 ]; then
    rm "$RUNNING_FILE" 2>/dev/null
fi

exit $ANY_ERRORS
